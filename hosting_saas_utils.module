<?php

/**
 * Implementation of hook_menu().
 */
function hosting_saas_utils_menu() {
  $items['admin/hosting/saas_utils'] = array(
    'title' => 'SaaS utilities',
    'description' => 'Configure software-as-a-service utilities',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_saas_utils_settings'),
    'access arguments' => array('administer sites'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Configuration form for hosting_saas
 *
 * @see hosting_saas_utils_settings_submit
 */
function hosting_saas_utils_settings() {
  /* New user / uid1 */
  $user_options = array(1 => t('New user (recommended)'), 0 => t('Admin user (uid1, has all permissions)'));

  $form['hosting_saas_utils_create_new_user'] = array(
    '#type' => 'radios',
    '#title' => t('Client user'),
    '#default_value' => variable_get('hosting_saas_utils_create_new_user', 1),
    '#options' => $user_options,
    '#description' => t('The user to use on the new site.'),
  );

  $form['hosting_saas_utils_user_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Client user email variable'),
    '#description' => t("Enter the variable name that will contain the client user's email. Leave empty to not create or edit a user."),
    '#default_value' => variable_get('hosting_saas_utils_user_email', ''),
    '#required' => FALSE,
  );

  $form['hosting_saas_utils_user_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Client user name variable'),
    '#description' => t("Enter the variable name that will contain the client user's name. Will default to the email variable's value."),
    '#default_value' => variable_get('hosting_saas_utils_user_name', ''),
    '#required' => FALSE,
  );

  $form['hosting_saas_utils_user_role'] = array(
    '#type' => 'textfield',
    '#title' => t('Client user role to assign'),
    '#description' => t("Enter the name of the role to assign to the client user. Leave empty for none."),
    '#default_value' => variable_get('hosting_saas_utils_user_role', NULL),
    '#required' => FALSE,
  );

  _hosting_saas_utils_append_variables($form);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

  // TODO: When saving, delete removed values
 
  // Can't use system_settings_form() because of the dynamic variables array.
  return $form;
}

/**
 * Helper function to add dynamically generated variable fields.
 */
function _hosting_saas_utils_append_variables(&$form) {
  $form['hosting_saas_utils_variables'] = array(
    '#type' => 'fieldset',
    '#title' => t('Variables'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => t("Values to assign to site variables based on POST variables. This allows a 'bridge' from your subscription form to a site's variable. Exemple: whateveryouwant => site_name."),
  );

  $counter = 0;
  foreach (variable_get('hosting_saas_utils_variables', array()) as $index => $values) {
    _hosting_saas_utils_append_variable_fieldset($form, $counter, $values['key'], $values['name']);

    $counter += 1;
  }

  _hosting_saas_utils_append_variable_fieldset($form, $counter);
}

/**
 * Helper function to add a variable set fieldset
 */
function _hosting_saas_utils_append_variable_fieldset(&$form, $index, $variable_key = '', $variable_name = '') {
  $form['hosting_saas_utils_variables'][$index] = array(
    '#type' => 'fieldset',
    '#title' => t('Variable set'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  
  // TODO: If key is supplied, value is mandatory.
  $form['hosting_saas_utils_variables'][$index]['hosting_saas_utils_variable_key_' . $index] = array(
    '#type' => 'textfield',
    '#title' => t('Variable POST key'),
    '#description' => t("This is the arbitrary name of the POST argument you will give the variable."),
    '#default_value' => $variable_key,
    '#required' => FALSE,
  );

  $form['hosting_saas_utils_variables'][$index]['hosting_saas_utils_variable_name_' . $index] = array(
    '#type' => 'textfield',
    '#title' => t('Drupal variable name'),
    '#description' => t("This is the name of the variable that will be set in the new site using variable_set()."),
    '#default_value' => $variable_name,
    '#required' => FALSE,
  );  
}

function hosting_saas_utils_settings_submit(&$form, &$form_state) {
  $variables = array();
  foreach (element_children($form['hosting_saas_utils_variables']) as $index) {
//    index is just the number of the child
    $key = $form_state['values']['hosting_saas_utils_variable_key_' . $index];
    $name = $form_state['values']['hosting_saas_utils_variable_name_' . $index];

    if (!empty($key) && !empty($name)) {
      $variables[$index] = array('key' => $key, 'name' => $name);
    }
  }

  variable_set('hosting_saas_utils_variables', $variables);
}
